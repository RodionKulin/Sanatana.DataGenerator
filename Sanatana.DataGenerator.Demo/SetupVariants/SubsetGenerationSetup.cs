using Sanatana.DataGenerator.Demo.Entities;
using System;
using Sanatana.DataGenerator.Demo.Database;
using Sanatana.DataGenerator.AutoBogus;
using Sanatana.DataGenerator.Supervisors.Subset;

namespace Sanatana.DataGenerator.Demo.SetupVariants
{
    internal class SubsetGenerationSetup
    {
        public static void Start()
        {
            //Arrange
            Func<ProcurementDbContext> dbContextFactory = () => new ProcurementDbContext();
            using (ProcurementDbContext context = dbContextFactory())
            {
                context.Database.EnsureDeleted();
                context.Database.EnsureCreated();
            }

            var setup = new GeneratorSetup()
                .SetDefaultSettings(def => def
                    .SetGenerator(new AutoBogusGenerator()) //will populate random values for entity instances
                )
                .SetupWithEntityFrameworkCore(dbContextFactory, efSetup => efSetup
                    //1. Register entities from EF Model;
                    //2. Register Required entities from EF Model foreign keys;
                    //3. Set InsertToPersistentStorageBeforeUse=true if entity has autogenerated properties;
                    //4. Increment primary keys instead of random ints populated by AutoBogus;
                    //5. Set foreign keys in EfCoreSetForeignKeysModifier;
                    //6. Set EfCorePersistentStorage as default.
                    .SetupFullEfSettingsBundle()
                );

            //Act
            PurchaseOrder purchaseOrder = setup.ToSubsetSetup<PurchaseOrder>()
                .SetTargetCountSingle(EntitiesSelection.All)
                .SetInMemoryStorage(EntitiesSelection.Target, true)
                .GetSingleTarget();

            //Assert
            Console.WriteLine($"Generated {nameof(PurchaseOrder)} with Id={purchaseOrder.Id}");
            Console.WriteLine($"{nameof(SubsetGenerationSetup)} generation completed");
        }

    }
}
