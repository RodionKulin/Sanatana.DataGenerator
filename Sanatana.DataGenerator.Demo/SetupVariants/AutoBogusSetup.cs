using Sanatana.DataGenerator.Demo.Entities;
using System;
using Sanatana.DataGenerator.Demo.Database;
using Sanatana.DataGenerator.AutoBogus;
using System.Linq;

namespace Sanatana.DataGenerator.Demo.SetupVariants
{
    internal class AutoBogusSetup
    {
        public static void Start()
        {
            //Arrange
            Func<ProcurementDbContext> dbContextFactory = () => new ProcurementDbContext();
            using (ProcurementDbContext context = dbContextFactory())
            {
                context.Database.EnsureDeleted();
                context.Database.EnsureCreated();
            }

            var setup = new GeneratorSetup()
                .SetDefaultSettings(def => def
                    .SetGenerator(new AutoBogusGenerator()) //will populate random values for entity instances
                    .SetTargetCount(100)    //set TargetCount for PurchaseOrder, other entities will override it
                )
                .SetupWithEntityFrameworkCore(dbContextFactory, efSetup => efSetup
                    //1. Register entities from EF Model;
                    //2. Register Required entities from EF Model foreign keys;
                    //3. Set InsertToPersistentStorageBeforeUse=true if entity has autogenerated properties;
                    //4. Increment primary keys instead of random ints populated by AutoBogus;
                    //5. Set foreign keys in EfCoreSetForeignKeysModifier;
                    //6. Set EfCorePersistentStorage as default.
                    .SetupFullEfSettingsBundle()
                )
                .ModifyEntity<Buyer>(entity => entity
                    .SetTargetCount(10)
                )
                .ModifyEntity<Supplier>(entity => entity
                    .SetTargetCount(10)
                );

            //Act
            setup.Generate();

            //Assert
            PurchaseOrder[] purchaseOrders = null;
            Supplier[] suppliers = null;
            using (ProcurementDbContext dbContext = dbContextFactory())
            {
                purchaseOrders = dbContext.PurchaseOrders.ToArray();
                suppliers = dbContext.Suppliers.ToArray();
            }
            Console.WriteLine($"Generated {purchaseOrders.Length} instances of {nameof(PurchaseOrder)}");
            Console.WriteLine($"Generated {suppliers.Length} instances of {nameof(Supplier)}");
            Console.WriteLine($"{nameof(AutoBogusSetup)} generation completed");
        }

    }
}
